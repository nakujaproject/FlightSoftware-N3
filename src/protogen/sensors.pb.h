/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_FLIGHT_SENSORS_PB_H_INCLUDED
#define PB_FLIGHT_SENSORS_PB_H_INCLUDED
#include <pb.h>
#include "vec3.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _flight_GyroReading {
    bool has_a;
    flight_Vec3 a;
    bool has_g;
    flight_Vec3 g;
} flight_GyroReading;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define flight_GyroReading_init_default          {false, flight_Vec3_init_default, false, flight_Vec3_init_default}
#define flight_GyroReading_init_zero             {false, flight_Vec3_init_zero, false, flight_Vec3_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define flight_GyroReading_a_tag                 1
#define flight_GyroReading_g_tag                 2

/* Struct field encoding specification for nanopb */
#define flight_GyroReading_FIELDLIST(X, a_) \
X(a_, STATIC,   OPTIONAL, MESSAGE,  a,                 1) \
X(a_, STATIC,   OPTIONAL, MESSAGE,  g,                 2)
#define flight_GyroReading_CALLBACK NULL
#define flight_GyroReading_DEFAULT NULL
#define flight_GyroReading_a_MSGTYPE flight_Vec3
#define flight_GyroReading_g_MSGTYPE flight_Vec3

extern const pb_msgdesc_t flight_GyroReading_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define flight_GyroReading_fields &flight_GyroReading_msg

/* Maximum encoded size of messages (where known) */
#define flight_GyroReading_size                  34

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
